// Generated by CoffeeScript 1.6.3
var Browser, ExpressHtmlSnapshots,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Browser = require('zombie');

ExpressHtmlSnapshots = (function() {
  function ExpressHtmlSnapshots() {
    this.generateUrlFromRequest = __bind(this.generateUrlFromRequest, this);
    this.shouldServeSnapshot = __bind(this.shouldServeSnapshot, this);
    this.snapshot = __bind(this.snapshot, this);
    this.serveSnapshot = __bind(this.serveSnapshot, this);
    this.middleware = __bind(this.middleware, this);
    this.googlebotMiddleware = __bind(this.googlebotMiddleware, this);
  }

  ExpressHtmlSnapshots.prototype.googlebotMiddleware = function(req, res, next) {
    return this.middleware(req, res, next);
  };

  ExpressHtmlSnapshots.prototype.middleware = function(req, res, next) {
    if (this.shouldServeSnapshot(req)) {
      return this.serveSnapshot(req, res, next);
    } else {
      return next();
    }
  };

  ExpressHtmlSnapshots.prototype.serveSnapshot = function(req, res, next) {
    var _this = this;
    return this.snapshot(this.generateUrlFromRequest(req), function(err, html) {
      if (err) {
        return next();
      } else {
        return res.send(html);
      }
    });
  };

  ExpressHtmlSnapshots.prototype.snapshot = function(url, callback) {
    var browser,
      _this = this;
    browser = new Browser();
    browser.runScripts = true;
    return browser.visit(url, function(err, browser) {
      return callback(err, browser.html());
    });
  };

  ExpressHtmlSnapshots.prototype.shouldServeSnapshot = function(req) {
    return req.query['_escaped_fragment_'] || (req.headers['user-agent'] && (req.headers['user-agent'].indexOf('Googlebot') >= 0 || req.headers['user-agent'].indexOf('bingbot') >= 0 || req.headers['user-agent'].indexOf('Yahoo! Slurp') >= 0));
  };

  ExpressHtmlSnapshots.prototype.generateUrlFromRequest = function(req) {
    var key, url;
    url = "";
    if (req.query['_escaped_fragment_']) {
      url = "" + req.protocol + "://" + (req.header('host')) + "/#!" + req.query['_escaped_fragment_'] + "?";
      delete req.query['_escaped_fragment_'];
      for (key in req.query) {
        url += "" + key + "=" + req.query[key] + "&";
      }
    } else {
      url = "" + req.protocol + "://" + (req.header('host')) + req._parsedUrl.path;
    }
    return url;
  };

  return ExpressHtmlSnapshots;

})();

module.exports = new ExpressHtmlSnapshots();
